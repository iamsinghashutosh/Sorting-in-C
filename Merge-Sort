**DATE:-12-February-2019
**TIME:-23:30(GMT)
**********************************************************************************************************
#include<stdio.h>
void merger(int arr[],int begin,int mid, int end)
{
  int a,b,c;
  a=begin;
  b=mid+1;
  c=0;
  int array[end+1-begin];       /** Declaring new array to merge and store sorted sub-halves **/
  for(int i=begin;i<=end;i++)
   {
    if(a > mid)                   /**The Case when the index of first half is greater than half **/
      array[c++]=arr[b++];       
    else if(b > end)             /**The Case when the index of second half exceeds the end point**/
      array[c++]=arr[a++];
    else if(arr[a] > arr[b])    /**Comparing values of the two sub-halves and storing the min. of them in the new array**/
        array[c++]=arr[b++];
    else
        array[c++]=arr[a++];
   }
   for(int i=0;i<c;i++)
   arr[begin++]=array[i];    /**Updating the required array values in sorted form **/
}
void MergeSort(int arr[],int begin,int end)
{
  if(end > begin)
  {
    int mid=(begin+end)/2;
     MergeSort(arr,begin,mid);                   /**deviding problem into halves**/
     MergeSort(arr,mid+1,end);                      /** "     "        "      "   ** /
     merger(arr,begin,mid,end);                 /** Calling the merger function to solve the subproblems **/ 
  }
}
int main()
{
  int n;
  scanf("%d",&n);
  int arr[n];
  for(int i=0;i<n;i++)
  {
    scanf("%d",&arr[i]);
  }
  MergeSort(arr,0,n-1);
	for(int i=0;i<n;i++)
	printf("%d ",arr[i]);
}
